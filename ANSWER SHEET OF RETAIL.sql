SELECT * FROM DBO.Customer;
SELECT * FROM DBO.prod_cat_info;
SELECT * FROM DBO.Transactions;


----DATA PREPARATION AND UNDERSTANDING

---QUES 1 BEGIN
SELECT COUNT(*) AS [TOTAL ROWS]  FROM DBO.Customer
UNION ALL 
SELECT COUNT(*) AS [TOTAL ROWS] FROM DBO.prod_cat_info
UNION ALL
SELECT COUNT(*) AS [TOTAL ROWS] FROM DBO.Transactions;
---END


---QUES 2 BEGIN
SELECT COUNT(TOTAL_AMT) AS [TOTAL TRANSACTION] FROM Transactions
WHERE TOTAL_AMT LIKE '-%';
---END


---QUES 3 BEGIN
SELECT CONVERT(DATE,DOB,105) AS DOB FROM DBO.Customer
SELECT CONVERT(DATE,TRAN_DATE,105)AS TRAN_DATE FROM DBO.Transactions;
---END


---QUES 4 BEGIN
SELECT DATEDIFF(DAY,MIN(CONVERT(DATE,TRAN_DATE,105)),MAX(CONVERT(DATE,TRAN_DATE,105))) AS DAYS,
DATEDIFF(MONTH,MIN(CONVERT(DATE,TRAN_DATE,105)),MAX(CONVERT(DATE,TRAN_DATE,105))) AS MONTHS,
DATEDIFF(YEAR,MIN(CONVERT(DATE,TRAN_DATE,105)),MAX(CONVERT(DATE,TRAN_DATE,105))) AS YEARS
FROM DBO.TRANSACTIONS;
---END


---QUES 5 BEGIN
SELECT PROD_CAT
FROM DBO.prod_cat_info
WHERE prod_subcat = 'DIY';
---END



----DATA ANALYSIS

---QUES 1 BEGIN
SELECT TOP 1 STORE_TYPE, COUNT(TRANSACTION_ID) AS COUNT FROM DBO.Transactions
GROUP BY STORE_TYPE
ORDER BY COUNT(TRANSACTION_ID) DESC;
---END


---QUES 2 BEGIN
SELECT GENDER, COUNT(CUSTOMER_ID) AS [TOTAL_G]
FROM DBO.Customer
WHERE GENDER IN ('M','F')
GROUP BY GENDER;
---END


---QUES 3 BEGIN
SELECT TOP 1 CITY_CODE, COUNT(CUSTOMER_ID) AS [TOT_CUS]
FROM DBO.Customer
GROUP BY CITY_CODE
ORDER BY TOT_CUS DESC;
---	END


---QUES 4 BEGIN
SELECT PROD_CAT , COUNT(PROD_SUBCAT) AS [TOT_SUBCAT]
FROM DBO.prod_cat_info
WHERE PROD_CAT = 'BOOKS'
GROUP BY PROD_CAT;
---END


---QUES 5 BEGIN
SELECT TOP 1 QTY FROM DBO.Transactions
ORDER BY QTY DESC;
---END


---QUES 6 BEGIN
SELECT  SUM(ISNULL(cast(TOTAL_AMT AS FLOAT),0)) AS [TOT_REVENUE]
FROM DBO.Transactions AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
WHERE PROD_CAT IN ('BOOKS' , 'ELECTRONICS' );
---END


---QUES 7 BEGIN
SELECT COUNT(CUSTOMER_ID) AS CUST_COUNT
FROM DBO.Customer AS A WHERE customer_Id IN
(
SELECT CUST_ID
FROM DBO.Transactions AS B
LEFT JOIN DBO.Customer AS A ON A.customer_Id = B.cust_id
WHERE TOTAL_AMT NOT LIKE '-%'
GROUP BY
CUST_ID
HAVING
COUNT(TRANSACTION_ID) >10
);
--END


---QUES 8 BEGIN
SELECT SUM(ISNULL(cast(TOTAL_AMT AS FLOAT),0)) AS [TOT_REVENUE]
FROM DBO.Transactions AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
WHERE PROD_CAT IN ('CLOTHING' , 'ELECTRONICS' )
AND STORE_TYPE = 'FLAGSHIP STORE';
---END


---QUES 9 BEGIN
SELECT PROD_SUBCAT, SUM(cast(TOTAL_AMT AS FLOAT)) AS [TOT_REVENUE]
FROM DBO.Transactions AS A
INNER JOIN dbo.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
INNER JOIN dbo.Customer AS C ON A.cust_id = C.customer_Id
WHERE prod_cat = 'Electronics' AND Gender = 'M'
GROUP BY prod_subcat;
---END


 

---QUES 10 BEGIN
SELECT TOP 5 
PROD_SUBCAT, (SUM(CAST(TOTAL_AMT AS FLOAT))/(SELECT SUM(CAST(TOTAL_AMT AS FLOAT)) FROM DBO.Transactions))*100 AS PERCANTAGE_OF_SALES, 
(COUNT(CASE WHEN QTY< 0 THEN QTY ELSE NULL END)/SUM(CAST(QTY AS FLOAT)))*100 AS PERCENTAGE_OF_RETURN
FROM DBO.TRANSACTIONS AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code 
AND A.prod_subcat_code= B.prod_sub_cat_code
GROUP BY PROD_SUBCAT
ORDER BY SUM(CAST(TOTAL_AMT AS FLOAT)) DESC;
--END


---QUES 11 BEGIN
SELECT CUST_ID, SUM(CAST(TOTAL_AMT AS FLOAT)) AS REVENUE FROM DBO.TRANSACTIONS AS A
INNER JOIN DBO.CUSTOMER AS B ON A.CUST_ID =B.CUSTOMER_ID
WHERE DATEDIFF(YEAR, CONVERT(DATE,DOB,105),GETDATE()) BETWEEN 25 AND 35
AND CONVERT(DATE,TRAN_DATE,105) BETWEEN DATEADD(DAY, -30,(SELECT MAX(CONVERT(DATE,TRAN_DATE,105)) FROM DBO.TRANSACTIONS))
AND(SELECT MAX(CONVERT(DATE,TRAN_DATE,105)) FROM DBO.TRANSACTIONS)
GROUP BY CUST_ID;
---END


---QUES 12 BEGIN
SELECT TOP 1  PROD_CAT  ,SUM(case when (CAST(Qty AS FLOAT)) < 0 then (CAST(Qty AS FLOAT))*-1 else 0 end)AS 
QUANTITY FROM DBO.TRANSACTIONS AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
WHERE QTY <0 AND
CONVERT(DATE,TRAN_DATE,105) BETWEEN DATEADD(MONTH,-3,(SELECT MAX(CONVERT(DATE,TRAN_DATE,105)) FROM DBO.TRANSACTIONS))
AND(SELECT MAX(CONVERT(DATE,TRAN_DATE,105)) FROM DBO.TRANSACTIONS)
GROUP BY PROD_CAT 
ORDER BY QUANTITY DESC
---END


---QUES 13 BEGIN
SELECT STORE_TYPE , SUM(ISNULL(cast(TOTAL_AMT AS FLOAT),0)) AS TOT_SALES ,SUM(ISNULL(cast(QTY AS FLOAT),0)) AS TOT_QUAN
FROM DBO.TRANSACTIONS
GROUP BY STORE_TYPE
HAVING SUM(ISNULL(cast(TOTAL_AMT AS FLOAT),0))  >= ALL(SELECT SUM(ISNULL(cast(TOTAL_AMT AS FLOAT),0)) FROM DBO.TRANSACTIONS GROUP BY STORE_TYPE)
AND SUM(ISNULL(cast(QTY AS FLOAT),0)) >= ALL(SELECT SUM(ISNULL(cast(QTY AS FLOAT),0)) FROM DBO.TRANSACTIONS GROUP BY STORE_TYPE)
---END


---QUES 14 BEGIN
SELECT PROD_CAT, AVG(isnull(CAST(TOTAL_AMT AS FLOAT),0)) AS AVERAGE
FROM DBO.Transactions AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
GROUP BY PROD_CAT
HAVING AVG(isnull(CAST(TOTAL_AMT AS FLOAT),0))>(SELECT AVG(isnull(CAST(TOTAL_AMT AS FLOAT),0)) FROM DBO.TRANSACTIONS);
---END


---QUES 15 BEGIN
SELECT TOP 5 PROD_CAT,PROD_SUBCAT,AVG(isnull(CAST(TOTAL_AMT AS FLOAT),0)) AS AVERAGE_REV,SUM(ISNULL(cast(TOTAL_AMT AS FLOAT),0)) AS REVENUE 
FROM DBO.TRANSACTIONS AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
WHERE PROD_CAT IN
(SELECT TOP 5 PROD_CAT 
FROM DBO.TRANSACTIONS AS A
INNER JOIN DBO.prod_cat_info AS B ON A.prod_cat_code = B.prod_cat_code
AND A.prod_subcat_code = B.prod_sub_cat_code
GROUP BY PROD_CAT
ORDER BY SUM(ISNULL(cast(QTY AS FLOAT),0)) DESC)
GROUP BY PROD_CAT, PROD_SUBCAT





 













